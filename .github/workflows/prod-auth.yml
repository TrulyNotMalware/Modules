name: Prod-Auth-Build
on:
  pull_request:
    types:
      - closed
    branches:
      - "main"
    paths:
      - "auth/**" #Auth Application
      - "common/**" #Common Module
      - "core/**" #Core Module
      - "security/**" #Security Module
      - "*.gradle"

permissions:
  contents: read

env:
  DOCKER_TAG: ${{ github.sha }}
jobs:
  build:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            auth:
              - 'auth/**'
            common:
              - 'common/**'
            core:
              - 'core/**'
            security:
              - 'security/**'

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Generate prod keystore
        run: |
          echo "$KEYSTORE" > ./keystore.b64
          base64 -d -i ./keystore.b64 > ./auth/src/main/resources/notypieprod.jks
        env:
          KEYSTORE: ${{ secrets.PROD_SECRET_KEY }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Test step
        run: ./gradlew clean :core:test :common:test :security:test :auth:test

      - name: Compile
        run: ./gradlew clean :auth:build -x test

      - name: Emulator install
        uses: docker/setup-qemu-action@v3

      - name: Setup buildx for Arm64
        uses: docker/setup-buildx-action@v3

      - name: Harbor registry login
        uses: docker/login-action@v1
        with:
          registry: harbor.registry.notypie.dev
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Push build image
        uses: docker/build-push-action@v5
        with:
          platforms: linux/arm64
          context: ./auth
          push: true
          tags: |
            harbor.registry.notypie.dev/apis/auth-client:${{ env.DOCKER_TAG }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: SSH access and Execute deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.OKE_DEPLOY_HOST }}
          username: ${{ secrets.OKE_DEPLOY_USER }}
          key: ${{ secrets.OKE_CLUSTER_PRIV_KEY }}
          port: 22
          script: |
            cd actions
            ./deploy.sh auth-client ${{ env.DOCKER_TAG }}